#include <stdio.h>
#include <stdlib.h>

#define FRAME_SIZE 3
#define PAGE_SIZE 10

int findLRU(int time[], int n) {
    int minimum = time[0], pos = 0;
    for (int i = 1; i < n; i++) {
        if (time[i] < minimum) {
            minimum = time[i];
            pos = i;
        }
    }
    return pos;
}

void LRU(int pages[], int n) {
    int frame[FRAME_SIZE], time[FRAME_SIZE], i, j, k, flag1, flag2, pageFaults = 0;

    for (i = 0; i < FRAME_SIZE; i++) {
        frame[i] = -1;
    }

    for (i = 0; i < n; i++) {
        flag1 = flag2 = 0;

        for (j = 0; j < FRAME_SIZE; j++) {
            if (frame[j] == pages[i]) {
                flag1 = flag2 = 1;
                break;
            }
        }

        if (flag1 == 0) {
            for (j = 0; j < FRAME_SIZE; j++) {
                if (frame[j] == -1) {
                    frame[j] = pages[i];
                    pageFaults++;
                    flag2 = 1;
                    break;
                }
            }
        }

        if (flag2 == 0) {
            int pos = findLRU(time, FRAME_SIZE);
            frame[pos] = pages[i];
            pageFaults++;
        }

        time[i % FRAME_SIZE] = i;
        printf("Page %d: ", pages[i]);
        for (k = 0; k < FRAME_SIZE; k++) {
            if (frame[k] != -1) {
                printf("%d ", frame[k]);
            }
        }
        printf("\n");
    }
    printf("Total Page Faults: %d\n", pageFaults);
}

int main() {
    int pages[PAGE_SIZE] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3};
    LRU(pages, PAGE_SIZE);
    return 0;
}
